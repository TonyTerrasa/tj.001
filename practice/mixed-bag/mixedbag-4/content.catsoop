Source Article (from Wikipedia): [https://en.wikipedia.org/wiki/Harley-Davidson#Motorcycle_engines](https://en.wikipedia.org/wiki/Harley-Davidson#Motorcycle_engines)

The classic Harley-Davidson engines (still used today) __(1, be)__ V-twin engines, with a 45° angle between the cylinders. The crankshaft __(2, have)__ a single pin, and both pistons __(3, be connected)__ to this pin through their connecting rods.

<question smallbox>
    csq_prompt='Number 1'
    csq_soln = ['are']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 2'
    csq_soln = ['has']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 3'
    csq_soln = ['are connected']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

This 45° angle __(4, be covered)__ under several United States patents and __(5, be)__ an engineering tradeoff that __(6, allow)__ a large, high-torque engine in a relatively small space. It __(7, cause)__ the cylinders __(8, fire)__ at uneven intervals and __(9, produce)__ the choppy "potato-potato" sound so strongly linked to the Harley-Davidson brand.

<question smallbox>
    csq_prompt='Number 4'
    csq_soln = ['is covered', 'have been covered']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 5'
    csq_soln = ['is']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box
    csq_explanation = 'Numbers 5 and 6 must be the same tense'
</question>

<question smallbox>
    csq_prompt='Number 6'
    csq_soln = ['allows']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box
    csq_explanation = 'Numbers 5 and 6 must be the same tense'
</question>

<question smallbox>
    csq_prompt='Number 7'
    csq_soln = ['causes']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 8'
    csq_soln = ['to fire']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 9'
    csq_soln = ['produces', 'to produce']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

To simplify the engine and reduce costs, the V-twin ignition __(10, be designed)__ to operate with a single set of points and no distributor. This __(11, be known)__ as a dual fire ignition system, __(12, cause)__ both spark plugs __(13, fire)__ regardless of which cylinder __(14, be)__ on its compression stroke, with the other spark plug __(15, fire)__ on its cylinder's exhaust stroke, effectively "wasting a spark". The exhaust note __(16, be)__ basically a throaty growling sound with some popping. The 45° design of the engine thus __(17, create)__ a plug firing sequencing as such: The first cylinder fires, the second (rear) cylinder fires 315° later, then there is a 405° gap until the first cylinder fires again, giving the engine its unique sound.


<question smallbox>
    csq_prompt='Number 10'
    csq_soln = ['was designed', 'is designed']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 11'
    csq_soln = ['is known']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 12'
    csq_soln = ['causing']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 13'
    csq_soln = ['to fire']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 14'
    csq_soln = ['is']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 15'
    csq_soln = ['firing']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 16'
    csq_soln = ['is']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 17'
    csq_soln = ['creates']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

Harley-Davidson __(18, use)__ various ignition systems throughout its history – be it the early points and condenser system, (Big Twin and Sportsters up to 1978), magneto ignition system __(19, use)__ on some 1958 to 1969 Sportsters, early electronic with centrifugal mechanical advance weights, (all models from mid-1978 until 1979), or the late electronic with a transistorized ignition control module, more commonly __(20, know)__ as the black box or the brain, (all models 1980 to present).

<question smallbox>
    csq_prompt='Number 18'
    csq_soln = ['has used']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 19'
    csq_soln = ['used']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>

<question smallbox>
    csq_prompt='Number 20'
    csq_soln = ['known']
    csq_check_function = lambda sub, sol: sub.lower().strip() in sol
    csq_size = 30 # width of text box

</question>


